package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import com.example.sboot.common.Result;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};


#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 控制器
 * 代码生成器模版
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    //新增或者更新
##    @PostMapping
##    public boolean save(@RequestBody ${entity} ${table.entityPath}){
##        return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
##    }
    @PostMapping
    public Result save(@RequestBody ${entity} ${table.entityPath}){
        return Result.success(${table.entityPath}Service.saveOrUpdate(${table.entityPath}));
    }


    //删除
##    @DeleteMapping("/{id}")
##    public Boolean delete(@PathVariable Integer id) {
##        return ${table.entityPath}Service.removeById(id);
##    }
    @DeleteMapping("/{id}")
    public Result delete(@PathVariable Integer id) {
        return Result.success(${table.entityPath}Service.removeById(id));
    }

    //批量删除所选数据
##    @PostMapping("/del/batch")
##    public boolean deleteBatch(@RequestBody List<Integer> ids){
##        return ${table.entityPath}Service.removeByIds(ids);
##    }
    @PostMapping("/del/batch")
    public Result deleteBatch(@RequestBody List<Integer> ids){
        return Result.success(${table.entityPath}Service.removeByIds(ids));
    }

    //查询所有
##    @GetMapping
##    public List<${entity}> findAll() {
##        return ${table.entityPath}Service.list();
##    }
    @GetMapping
    public Result findAll() {
        return Result.success(${table.entityPath}Service.list());
    }

    //根据ID查询
##    @GetMapping("/{id}")
##    public ${entity} findOne(@PathVariable Integer id) {
##        return ${table.entityPath}Service.getById(id);
##    }
    @GetMapping("/{id}")
    public Result findOne(@PathVariable Integer id) {
        return Result.success(${table.entityPath}Service.getById(id));
    }

    //分页查询
##    @GetMapping("/page")
##    public Page<${entity}> findPage(@RequestParam Integer pageNum,@RequestParam Integer pageSize) {
##        QueryWrapper<User> queryWrapper = new QueryWrapper<>();
##        queryWrapper.orderByDesc("id");
##
##        return ${table.entityPath}Service.page(new Page<>(pageNum, pageSize),queryWrapper);
##    }
    @GetMapping("/page")
    public Result findPage(@RequestParam Integer pageNum,@RequestParam Integer pageSize) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        queryWrapper.orderByDesc("id");

        return Result.success(${table.entityPath}Service.page(new Page<>(pageNum, pageSize),queryWrapper));
    }



}

#end